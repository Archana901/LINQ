<Activity mc:Ignorable="sap sap2010" x:Class="Analyzing_Sales_Data_using_LINQ" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Analyzing_Sales_Data_using_LINQ_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Analyzing_Sales_Data_using_LINQ" sap:VirtualizedContainerService.HintSize="1009,2245" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_SalesData" />
      <Variable x:TypeArguments="x:String" Name="FilteredSalesDataStr" />
      <Variable x:TypeArguments="x:Boolean" Name="AnyTargetSalesReached" />
      <Variable x:TypeArguments="x:Int32" Name="MaxSales" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="SalesDictionary" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Sales Data" sap:VirtualizedContainerService.HintSize="468,2222" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage sap2010:Annotation.AnnotationText="1.Read Excel file SalesData.xlsx&#xD;&#xA;2.Use LINQ to order table rows by Total Sales ASC&#xD;&#xA;3.Use LINQ to verify if Total Sales &gt; Target Sales for any of the table rows&#xD;&#xA;4.Use LINQ  to find MAX Total Sales for EMEA departments&#xD;&#xA;5.Use LINQ to build a dictionary from the first two columns of the datatable." DisplayName="Questions" sap:VirtualizedContainerService.HintSize="434,256" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Read Excel file SalesData.xlsx&#xD;&#xA;Use LINQ To Order table rows By Total Sales ASC&#xD;&#xA;Use LINQ To verify If Total Sales &gt; Target Sales For any Of the table rows&#xD;&#xA;Use LINQ  To find MAX Total Sales For EMEA departments&#xD;&#xA;Use LINQ To build a dictionary From the first two columns Of the datatable.&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Read Excel File Sales.xlsx&quot;]" />
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_SalesData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="434,120" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="SalesData.xlsx" />
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,57" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
              <ueab:ExcelProcessScopeX.Body>
                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="604,1097" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="570,1037" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="SalesData.xlsx">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="536,745" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="502,201" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;A1&quot;)]" SaveTo="[dt_SalesData]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:ReadRangeX>
                            <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="502,484" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;A1&quot;)]" SaveAfterEachRow="True">
                              <ueab:ExcelForEachRowX.Body>
                                <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                  <ActivityAction.Argument1>
                                    <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                  </ActivityAction.Argument1>
                                  <ActivityAction.Argument2>
                                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                  </ActivityAction.Argument2>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="468,279" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Total Sales" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_6">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Total Sales")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Total Sales").ToString.Replace("$", "").Replace(",", "").Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Target Sales" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_7">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Target Sales")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Target Sales").ToString.Replace("$", "").Replace(",", "").Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </ueab:ExcelForEachRowX.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:ExcelForEachRowX>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelProcessScopeX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelProcessScopeX>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <Assign DisplayName="Total Sales from Sales file" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dt_SalesData]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dt_SalesData.AsEnumerable.OrderBy(Function(row) row("Total Sales")).CopyToDataTable]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:OutputDataTable DataTable="[dt_SalesData]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[FilteredSalesDataStr]" />
      <ui:LogMessage DisplayName="Filtered Sales Data String" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[FilteredSalesDataStr]" />
      <ui:LogMessage DisplayName="Total Sales&gt;Target Sales" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;To find if any of the sales departments have exceeded Taget Sales (Total Sales &gt; Target Sales)&quot;]" />
      <Assign DisplayName="Assign_Total Sales&gt;Target Sales" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[AnyTargetSalesReached]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[dt_SalesData.AsEnumerable.Any(Function(x)  Convert.ToInt32(x("Total Sales"))&gt;Convert.ToInt32(x("Target Sales")))]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="display the result AnyTargetSalesReached" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[AnyTargetSalesReached.ToString]" />
      <ui:LogMessage DisplayName="Total Sales for EMEA Sales Department" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot; To find the maximum for Total Sales for the EMEA Sales Departments&quot;]" />
      <Assign DisplayName="Maximum Sales" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[MaxSales]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[dt_SalesData.AsEnumerable.Where(Function(row) row("Sales Department").ToString.Contains("EMEA")).AsEnumerable.Max(Function(x) Convert.ToInt32(x("Total Sales")))]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Display Maximum sales of EMEA" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[MaxSales.ToString]" />
      <ui:LogMessage DisplayName=" To build a dictionary from first 2 columns" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot; To build a dictionary From the first two columns Of the datatable&quot;]" />
      <Assign DisplayName="to build a dictionary" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[SalesDictionary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dt_SalesData.AsEnumerable.Where(Function(x) Not String.IsNullOrEmpty(x("Sales Department").ToString)).ToDictionary(Function(k) k("Sales Department").ToString, Function(j) j("Total Sales").ToString)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="To display dictionary keys" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Dictionary keys: &quot;+String.join (&quot;; &quot;,SalesDictionary.keys)]" />
      <ui:LogMessage DisplayName="To display dictionary values" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Dictionary values: &quot;+String.join (&quot;; &quot;,SalesDictionary.Values)]" />
    </Sequence>
  </Sequence>
</Activity>